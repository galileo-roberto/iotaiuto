homeassistant:
  # Name of the location where Home Assistant is running
  name: RASPBERRY DI PROVA IN GALILEO
  # Location required to calculate the time the sun rises and sets
  latitude: 45.4311637
  longitude: 10.970157900000004
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 0
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Rome
  # Customization file
  customize: !include customize.yaml

# Show links to resources in log and frontend
introduction:

# Enables the frontend
frontend:

# Enables configuration UI
config:

http:
  # Secrets are defined in the file secrets.yaml
  # api_password: !secret http_password
  # Uncomment this if you are using SSL/TLS, running in Docker container, etc.
  # base_url: example.duckdns.org:8123

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time
history:

# View all events in a logbook
logbook:

# Enables a map showing the location of tracked devices
map:

# Track the sun
sun:

# Weather prediction 
# - tramite ingaggio della piattaforma di "darksky", le cui API sono interfacciate in maniera nativa dall'applicazione HomeAssistant;
# - Hass provvede ad invocare le API di DARKSKY secondo l'intervallo stabilito col parametro "update_interval", ricevendo poi
#   solo le variabili dichiarate come "monitored_condition";
#
#sensor:
#  - platform: darksky
#    api_key: sensor_darksky_api
#    name: SENSORE TEMPERATURA
#    language: it
#    monitored_condition: temperature
##    per utilizzare l'unita' di misura delle coordinate GPS inserite all'inizio, usare "units: auto"
#    units: auto
#    update_interval:
#      minutes: 3

# >> definizione sensore temperatura CPU (di tipo comando) con nome: cpu_temp

sensor:
   - platform: command_line
     name: CPU°
     friendly_name: 'CPU'
     command: "cat /sys/class/thermal/thermal_zone0/temp"
#     unit_of_measurement: "°C"
     scan_interval: 120
     value_template: '{{ value | multiply(0.001) }}'

   - platform: systemmonitor
     resources:
     - type: disk_free
       arg: /
     - type: memory_free
     - type: processor_use
     - type: last_boot
#     - type: since_last_boot



#- platform: command_line
#  name: cpu_Temp
#  command: "cat /sys/class/thermal/thermal_zone0/temp"
#  unit_of_measurement: "°C"
#  value_template: '{{ value | multiply(0.001) | round(1) }}'

#>> definizione sensori di default catturati con una istantanea del Raspberry (nomi standard)

#- platform: systemmonitor
#  resources:
#    - type: disk_free
#      arg: /
#    - type: memory_free
#    - type: processor_use
#    - type: last_boot
#    - type: since_last_boot

# >> definizione istogramma con nome "grafico001" relativo alla temperatura della CPU rilevata dal sensore: "cpu_temp"

#history_graph:
#  grafico001:
#    name: temperatura Raspberry
#    entities:
#      - sensor.cpu_temp
#    hours_to_show: 48
#    refresh: 10

# >> definizione del processo di registrazione/logging "recorder" delle info relative ai domini delle entità gestite (tra cui i sensor)

#recorder:
#  purge_keep_days: 3
#  include:
#    domains:
#      - automation
#      - input_boolean
#      - input_number
#      - input_datetime
#      - input_select
#      - binary_sensor
#      - sensor
#      - history_graph

# >> 


# Text to speech
tts:
  - platform: google

# Cloud
cloud:

# Example configuration.yaml entry
#device_tracker:
#  - platform: nmap_tracker
#    hosts: 192.168.1.0/24

group: !include groups.yaml
automation: !include automations.yaml
script: !include scripts.yaml
